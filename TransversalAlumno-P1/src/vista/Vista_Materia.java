/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.conexion;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.ButtonGroup;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import modelo.Materia;
import persistencia.MateriaData;

/**
 *
 * @author Lenovo
 */
public class Vista_Materia extends javax.swing.JInternalFrame {
    conexion con1 = new conexion();
    Connection conet;
    DefaultTableModel modelo;
    Statement st;
    ResultSet rs;
    
    private ButtonGroup grupoEstado;
    
    MateriaData materiaData = new MateriaData(con1);
    /**
     * Creates new form Vista_Materia
     */
    public Vista_Materia() {
        initComponents();
        conectarBaseDeDatos();
        inicializarModelo();
        consultar();
        
        grupoEstado = new ButtonGroup();
        grupoEstado.add(jRAlta);
        grupoEstado.add(jRBaja);
    }
    
    private void conectarBaseDeDatos() {
        String url = "jdbc:mariadb://127.0.0.1:3306/transversalDB";
        String user = "root";
        String password = "";

        try {
            conet = DriverManager.getConnection(url, user, password);
            System.out.println("Conexi√≥n a la base de datos exitosa!");
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage());
        }
    }
        private void inicializarModelo() {
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Materia");
        modelo.addColumn("estado");
        jTtablaMateria.setModel(modelo);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTtablaMateria = new javax.swing.JTable();
        jBinsertar = new javax.swing.JButton();
        jBactualizar = new javax.swing.JButton();
        jBborrar = new javax.swing.JButton();
        jRAlta = new javax.swing.JRadioButton();
        jRBaja = new javax.swing.JRadioButton();
        jTFMateria = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(570, 300));

        jTtablaMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Materia", "Estado"
            }
        ));
        jTtablaMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTtablaMateriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTtablaMateria);

        jBinsertar.setText("Insertar");
        jBinsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBinsertarActionPerformed(evt);
            }
        });

        jBactualizar.setText("Actualizar");
        jBactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBactualizarActionPerformed(evt);
            }
        });

        jBborrar.setText("Borrar");
        jBborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBborrarActionPerformed(evt);
            }
        });

        jRAlta.setText("Alta");
        jRAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRAltaActionPerformed(evt);
            }
        });

        jRBaja.setText("Baja");
        jRBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBajaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Nombre Materia:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Estado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRAlta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(150, 150, 150))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jBinsertar)
                                .addGap(44, 44, 44)
                                .addComponent(jBactualizar)
                                .addGap(38, 38, 38)
                                .addComponent(jBborrar)))
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRAlta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBinsertar)
                    .addComponent(jBactualizar)
                    .addComponent(jBborrar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRAltaActionPerformed
        int fila = jTtablaMateria.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione una materia de la tabla para dar de alta.");
        return;
    }
    int id = Integer.parseInt(jTtablaMateria.getValueAt(fila, 0).toString());
    try {
        materiaData.altaLogica(id);
        JOptionPane.showMessageDialog(this, "Materia dada de alta correctamente.");
        consultar();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al dar de alta la materia: " + ex.getMessage());
    }
    }//GEN-LAST:event_jRAltaActionPerformed

    private void jRBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBajaActionPerformed
         int fila = jTtablaMateria.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione una materia de la tabla para dar de baja.");
        return;
    }
    int id = Integer.parseInt(jTtablaMateria.getValueAt(fila, 0).toString());
    try {
        materiaData.bajaLogica(id);
        JOptionPane.showMessageDialog(this, "Materia dada de baja correctamente.");
        consultar();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al dar de baja la materia: " + ex.getMessage());
    }
    }//GEN-LAST:event_jRBajaActionPerformed

    private void jBinsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBinsertarActionPerformed
        Agregar1();
        consultar();
    }//GEN-LAST:event_jBinsertarActionPerformed

    private void jTtablaMateriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTtablaMateriaMouseClicked
       int fila = jTtablaMateria.getSelectedRow();
    if (fila == -1) {
    JOptionPane.showMessageDialog(this, "No se seleccion√≥ una fila");
    } else {
    // Obtener los valores de la tabla
    int idMateria = Integer.parseInt(jTtablaMateria.getValueAt(fila, 0).toString());
    String nombreMateria = jTtablaMateria.getValueAt(fila, 1).toString();
    boolean estado = Boolean.parseBoolean(jTtablaMateria.getValueAt(fila, 2).toString());

    // Asignar los valores a los componentes correspondientes
    jTFMateria.setText(nombreMateria);
    

}

    }//GEN-LAST:event_jTtablaMateriaMouseClicked

    private void jBactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBactualizarActionPerformed
        Actualizar();
        consultar();
    }//GEN-LAST:event_jBactualizarActionPerformed

    private void jBborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBborrarActionPerformed
        Borrar();
        consultar();
    }//GEN-LAST:event_jBborrarActionPerformed
    
    void consultar() {
        String sql = "SELECT * FROM materia";
        try {
            st = conet.createStatement();
            rs = st.executeQuery(sql);
            Object[] materia = new Object[3];
            modelo.setRowCount(0); // Limpiar la tabla
            while (rs.next()) {
                materia[0] = rs.getInt("id_materia");
                materia[1] = rs.getString("nombreMateria");
                materia[2] = rs.getBoolean("estado");
                modelo.addRow(materia);
            }
            jTtablaMateria.setModel(modelo);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    void Agregar1(){
        
    String materia = jTFMateria.getText();
   
    boolean activo = false;

    try {
        if (materia.equals("")) {
            JOptionPane.showMessageDialog(this, "Faltan datos en las casillas");
        } else {

           Materia crearMateria = new Materia(materia, activo);
           materiaData.agregarMateria(crearMateria);

            // Mostrar mensaje de √©xito
            JOptionPane.showMessageDialog(this, "Materia agregada correctamente");


        }
        } catch(Exception e){
            e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al agregar la materia: " + e.getMessage());
    } 
    }
    
        void Actualizar(){
String nombreMateria = jTFMateria.getText();
    boolean estado = true; // Supongamos que jCBEstado es un JCheckBox para el estado

    try {
        if (nombreMateria.equals("")) {
            JOptionPane.showMessageDialog(this, "Faltan datos en las casillas");
        } else {
            // Obtener el ID de la materia seleccionada en la tabla
            int fila = jTtablaMateria.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione una materia de la tabla para actualizar.");
                return;
            }
            int idMateria = Integer.parseInt(jTtablaMateria.getValueAt(fila, 0).toString());

            // Crear una instancia de Materia con los valores actualizados
            Materia materiaActualizada = new Materia(idMateria, nombreMateria, estado);

            // Llamar al m√©todo actualizar de MateriaData
            materiaData.actualizar(materiaActualizada);

            // Mostrar mensaje de √©xito
            JOptionPane.showMessageDialog(this, "Materia actualizada correctamente");

        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al actualizar la materia: " + ex.getMessage());
    }
        }
        
    void Borrar(){
    String materia = jTFMateria.getText();
    boolean estado = true;
    

    try {
        if (materia.equals("")) {
            JOptionPane.showMessageDialog(this, "Faltan datos en las casillas");
        } else {
            // Obtener el ID del alumno seleccionado en la tabla
            int fila = jTtablaMateria.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione una materia de la tabla para borrar.");
                return;
            }
            int id = Integer.parseInt(jTtablaMateria.getValueAt(fila, 0).toString());

 
            materiaData.borrar(id);

            // Mostrar mensaje de √©xito
            JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");


        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al eliminar la materia: " + ex.getMessage());
    } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBactualizar;
    private javax.swing.JButton jBborrar;
    private javax.swing.JButton jBinsertar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRAlta;
    private javax.swing.JRadioButton jRBaja;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFMateria;
    private javax.swing.JTable jTtablaMateria;
    // End of variables declaration//GEN-END:variables
}
