/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import conexion.conexion;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Alumno;
import modelo.Inscripcion;
import modelo.Materia;
import persistencia.AlumnoData;
import persistencia.InscripcionData;
import persistencia.MateriaData;

/**
 *
 * @author Elco-chino
 */
public class Vista_Inscripcion extends javax.swing.JInternalFrame {

    DefaultTableModel modeloTabla = new DefaultTableModel();

    /**
     * Creates new form Vista_Inscripcion
     */
    public Vista_Inscripcion() {
        initComponents();
        cargarMateriasEnComboBox();
        cargarAlumnosEnComboBox();
        CargarTablaModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JComboMateria = new javax.swing.JComboBox<>();
        JComboAlumno = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRInscribir = new javax.swing.JRadioButton();
        jRNoInscripto = new javax.swing.JRadioButton();
        JBInscribir = new javax.swing.JButton();
        JBAnular = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTInscripcion = new javax.swing.JTable();

        setClosable(true);

        JComboMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        JComboMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboMateriaActionPerformed(evt);
            }
        });

        JComboAlumno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Materia");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Alumno");

        jRInscribir.setText("Inscripto");
        jRInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRInscribirActionPerformed(evt);
            }
        });

        jRNoInscripto.setText("No inscripto");

        JBInscribir.setText("Inscribir");
        JBInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBInscribirActionPerformed(evt);
            }
        });

        JBAnular.setText("Anular inscripsion");
        JBAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBAnularActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Inscripciones");

        jTInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTInscripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JComboMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRInscribir)
                            .addComponent(JBInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JBAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRNoInscripto))
                                .addGap(66, 66, 66))
                            .addComponent(JComboAlumno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JComboMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JComboAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRInscribir)
                    .addComponent(jRNoInscripto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBAnular, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRInscribirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRInscribirActionPerformed

    private void JBInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBInscribirActionPerformed
        // Obtener la materia seleccionada
        Materia materiaSeleccionada = (Materia) JComboMateria.getSelectedItem();

        // Obtener el alumno seleccionado
        Alumno alumnoSeleccionado = (Alumno) JComboAlumno.getSelectedItem();

        // Asegurarte de que ambos combobox tengan selecciones v√°lidas
        if (materiaSeleccionada != null && alumnoSeleccionado != null) {
            conexion con = new conexion();
            InscripcionData inscripcionData = new InscripcionData(con);

            // Crear el objeto Inscripcion y asignarle los valores
            Inscripcion inscripcion = new Inscripcion();
            inscripcion.setId_materia(materiaSeleccionada.getId_materia());
            inscripcion.setId_alumno(alumnoSeleccionado.getId_alumno());
            

            // Llamar al m√©todo para inscribir el alumno en la materia
            inscripcionData.crearInscripcion(inscripcion);

            // Agregar la inscripci√≥n a la tabla
            Object[] fila = new Object[2]; // Tres columnas: Alumno, Materia, Estado
            fila[0] = alumnoSeleccionado.getApellido() + ", " + alumnoSeleccionado.getNombre(); // Nombre completo del alumno
            fila[1] = materiaSeleccionada.getNombreMateria(); // Nombre de la materia
            

            modeloTabla.addRow(fila); // Agregar la nueva fila a la tabla

            // Mostrar mensaje de √©xito
            JOptionPane.showMessageDialog(this, "Inscripci√≥n realizada con √©xito.");
        } else {
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Debes seleccionar un alumno y una materia.");
        }
    }//GEN-LAST:event_JBInscribirActionPerformed

    private void JBAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBAnularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JBAnularActionPerformed

    private void JComboMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboMateriaActionPerformed

    }//GEN-LAST:event_JComboMateriaActionPerformed

    private void cargarMateriasEnComboBox() {
        JComboMateria.removeAllItems(); // Limpiar los items antes de cargar

        conexion con = new conexion();
        MateriaData materiaData = new MateriaData(con); // Instanciar correctamente

        List<Materia> materias = materiaData.obtenerMateria(); // Obtener las materias desde la base de datos

        for (Materia materia : materias) {
        JComboMateria.addItem(materia.getNombreMateria());
    }
    }

    private void cargarAlumnosEnComboBox() {
        JComboAlumno.removeAllItems();

        conexion con = new conexion();
        AlumnoData alumnoData = new AlumnoData(con); // Aseg√∫rate de pasar tu conexi√≥n correctamente

        // Obtener la lista de alumnos desde la base de datos
        List<Alumno> alumnos = alumnoData.obtenerAlumnos();

        // Agregar los nombres de los alumnos al JComboBox
        for (Alumno alumno : alumnos) {
        String item = alumno.getApellido() + ", " + alumno.getNombre() + " - DNI: " + alumno.getDni();
        JComboAlumno.addItem(item);  // Aqu√≠ agregas el String concatenado
    }
    }

    private void CargarTablaModel() {

        modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Alumno");
        modeloTabla.addColumn("Materia");

        // Asignar el modelo a la JTable
        jTInscripcion.setModel(modeloTabla);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBAnular;
    private javax.swing.JButton JBInscribir;
    private javax.swing.JComboBox<String> JComboAlumno;
    private javax.swing.JComboBox<String> JComboMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRInscribir;
    private javax.swing.JRadioButton jRNoInscripto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTInscripcion;
    // End of variables declaration//GEN-END:variables
}
